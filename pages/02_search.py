import streamlit as st
from utils.database import Database
from utils.styling import apply_custom_styling
import logging

logger = logging.getLogger(__name__)
apply_custom_styling()

def search_page():
    if 'authenticated' not in st.session_state or not st.session_state.authenticated:
        st.warning("ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржкрзНрж░ржержорзЗ рж▓ржЧржЗржи ржХрж░рзБржи")
        return

    st.title("ЁЯФН рждржерзНржп ржЦрзБржБржЬрзБржи")

    db = Database()

    # Advanced search fields
    with st.container():
        col1, col2 = st.columns(2)

        with col1:
            si_number = st.text_input("ржХрзНрж░ржорж┐ржХ ржиржВ")
            name = st.text_input("ржирж╛ржо")
            fathers_name = st.text_input("ржкрж┐рждрж╛рж░ ржирж╛ржо")
            mothers_name = st.text_input("ржорж╛рждрж╛рж░ ржирж╛ржо")

        with col2:
            occupation = st.text_input("ржкрзЗрж╢рж╛")
            address = st.text_input("ржарж┐ржХрж╛ржирж╛")
            date_of_birth = st.text_input("ржЬржирзНржо рждрж╛рж░рж┐ржЦ")

    # Search buttons
    col3, col4 = st.columns([4, 1])
    with col3:
        search_button = st.button("ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи", type="primary")
    with col4:
        show_all = st.button("рж╕ржм ржжрзЗржЦрзБржи", type="secondary")

    if search_button or show_all:
        try:
            with st.spinner("ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."):
                if search_button:
                    search_criteria = {
                        'ржХрзНрж░ржорж┐ржХ_ржиржВ': si_number,
                        'ржирж╛ржо': name,
                        'ржкрж┐рждрж╛рж░_ржирж╛ржо': fathers_name,
                        'ржорж╛рждрж╛рж░_ржирж╛ржо': mothers_name,
                        'ржкрзЗрж╢рж╛': occupation,
                        'ржарж┐ржХрж╛ржирж╛': address,
                        'ржЬржирзНржо_рждрж╛рж░рж┐ржЦ': date_of_birth
                    }
                    # Remove empty criteria
                    search_criteria = {k: v for k, v in search_criteria.items() if v}
                    results = db.search_records_advanced(search_criteria)
                else:
                    results = db.get_batch_records(None)

                if results:
                    st.success(f"{len(results)}ржЯрж┐ ржлрж▓рж╛ржлрж▓ ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ")

                    for result in results:
                        with st.container():
                            st.markdown(f"""
                            <div style='background: white; padding: 1rem; border-radius: 0.5rem; margin-bottom: 1rem; box-shadow: 0 1px 3px rgba(0,0,0,0.1);'>
                                <h3>{result['ржирж╛ржо']}</h3>
                                <p><strong>ржХрзНрж░ржорж┐ржХ ржиржВ:</strong> {result['ржХрзНрж░ржорж┐ржХ_ржиржВ']}</p>
                                <p><strong>ржнрзЛржЯрж╛рж░ ржиржВ:</strong> {result['ржнрзЛржЯрж╛рж░_ржиржВ']}</p>
                                <p><strong>ржкрж┐рждрж╛рж░ ржирж╛ржо:</strong> {result['ржкрж┐рждрж╛рж░_ржирж╛ржо']}</p>
                                <p><strong>ржорж╛рждрж╛рж░ ржирж╛ржо:</strong> {result['ржорж╛рждрж╛рж░_ржирж╛ржо']}</p>
                                <p><strong>ржкрзЗрж╢рж╛:</strong> {result['ржкрзЗрж╢рж╛']}</p>
                                <p><strong>ржарж┐ржХрж╛ржирж╛:</strong> {result['ржарж┐ржХрж╛ржирж╛']}</p>
                                <p><strong>ржлрж╛ржЗрж▓:</strong> {result['batch_name']}/{result['file_name']}</p>
                                <p><strong>рж╕ржорзНржкрж░рзНржХрзЗрж░ ржзрж░ржг:</strong> {result.get('relationship_status', 'Regular')}</p>
                            </div>
                            """, unsafe_allow_html=True)

                            # Relationship status dropdown and update button
                            col1, col2 = st.columns([3, 1])
                            with col1:
                                current_status = result.get('relationship_status', 'Regular')
                                new_status = st.selectbox(
                                    "рж╕ржорзНржкрж░рзНржХрзЗрж░ ржзрж░ржг",
                                    options=['Regular', 'Friend', 'Enemy'],
                                    key=f"status_{result['id']}",
                                    index=['Regular', 'Friend', 'Enemy'].index(current_status)
                                )
                            with col2:
                                if new_status != current_status:
                                    if st.button("ржЖржкржбрзЗржЯ ржХрж░рзБржи", key=f"update_{result['id']}", type="primary"):
                                        try:
                                            updated_data = {
                                                'ржХрзНрж░ржорж┐ржХ_ржиржВ': result['ржХрзНрж░ржорж┐ржХ_ржиржВ'],
                                                'ржирж╛ржо': result['ржирж╛ржо'],
                                                'ржнрзЛржЯрж╛рж░_ржиржВ': result['ржнрзЛржЯрж╛рж░_ржиржВ'],
                                                'ржкрж┐рждрж╛рж░_ржирж╛ржо': result['ржкрж┐рждрж╛рж░_ржирж╛ржо'],
                                                'ржорж╛рждрж╛рж░_ржирж╛ржо': result['ржорж╛рждрж╛рж░_ржирж╛ржо'],
                                                'ржкрзЗрж╢рж╛': result['ржкрзЗрж╢рж╛'],
                                                'ржарж┐ржХрж╛ржирж╛': result['ржарж┐ржХрж╛ржирж╛'],
                                                'ржЬржирзНржо_рждрж╛рж░рж┐ржЦ': result.get('ржЬржирзНржо_рждрж╛рж░рж┐ржЦ', ''),
                                                'relationship_status': new_status
                                            }
                                            db.update_record(result['id'], updated_data)
                                            st.success("тЬЕ рж╕ржорзНржкрж░рзНржХрзЗрж░ ржзрж░ржг ржЖржкржбрзЗржЯ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!")
                                            st.rerun()
                                        except Exception as e:
                                            logger.error(f"Update error: {str(e)}")
                                            st.error(f"ржЖржкржбрзЗржЯ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ: {str(e)}")

                else:
                    st.info("ржХрзЛржи ржлрж▓рж╛ржлрж▓ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐")

        except Exception as e:
            logger.error(f"Search error: {str(e)}")
            st.error(f"ржЕржирзБрж╕ржирзНржзрж╛ржирзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ: {str(e)}")

if __name__ == "__main__":
    search_page()