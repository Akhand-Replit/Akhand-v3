import streamlit as st
from utils.database import Database
from utils.styling import apply_custom_styling
import logging

logger = logging.getLogger(__name__)
apply_custom_styling()

def search_page():
    if 'authenticated' not in st.session_state or not st.session_state.authenticated:
        st.warning("ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржкрзНрж░ржержорзЗ рж▓ржЧржЗржи ржХрж░рзБржи")
        return

    st.title("ЁЯФН рждржерзНржп ржЦрзБржБржЬрзБржи")

    db = Database()

    # Search interface
    col1, col2 = st.columns([4, 1])

    with col1:
        search_term = st.text_input("ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи", placeholder="ржирж╛ржо, ржкрж┐рждрж╛рж░ ржирж╛ржо, ржарж┐ржХрж╛ржирж╛ ржЗрждрзНржпрж╛ржжрж┐")

    with col2:
        show_all = st.button("рж╕ржм ржжрзЗржЦрзБржи", type="secondary")

    if search_term or show_all:
        try:
            with st.spinner("ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."):
                if search_term:
                    results = db.search_records(search_term)
                else:
                    results = db.get_batch_records(None)  # Get all records

                if results:
                    st.success(f"{len(results)}ржЯрж┐ ржлрж▓рж╛ржлрж▓ ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ")

                    for result in results:
                        with st.container():
                            st.markdown(f"""
                            <div style='background: white; padding: 1rem; border-radius: 0.5rem; margin-bottom: 1rem; box-shadow: 0 1px 3px rgba(0,0,0,0.1);'>
                                <h3>{result['ржирж╛ржо']}</h3>
                                <p><strong>ржХрзНрж░ржорж┐ржХ ржиржВ:</strong> {result['ржХрзНрж░ржорж┐ржХ_ржиржВ']}</p>
                                <p><strong>ржнрзЛржЯрж╛рж░ ржиржВ:</strong> {result['ржнрзЛржЯрж╛рж░_ржиржВ']}</p>
                                <p><strong>ржкрж┐рждрж╛рж░ ржирж╛ржо:</strong> {result['ржкрж┐рждрж╛рж░_ржирж╛ржо']}</p>
                                <p><strong>ржорж╛рждрж╛рж░ ржирж╛ржо:</strong> {result['ржорж╛рждрж╛рж░_ржирж╛ржо']}</p>
                                <p><strong>ржкрзЗрж╢рж╛:</strong> {result['ржкрзЗрж╢рж╛']}</p>
                                <p><strong>ржарж┐ржХрж╛ржирж╛:</strong> {result['ржарж┐ржХрж╛ржирж╛']}</p>
                                <p><strong>ржмрзНржпрж╛ржЪ:</strong> {result['batch_name']}</p>
                            </div>
                            """, unsafe_allow_html=True)
                else:
                    st.info("ржХрзЛржи ржлрж▓рж╛ржлрж▓ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐")

        except Exception as e:
            logger.error(f"Search error: {str(e)}")
            st.error(f"ржЕржирзБрж╕ржирзНржзрж╛ржирзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ: {str(e)}")

if __name__ == "__main__":
    search_page()